theory LetBlockCharlyOne begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: fst/1, hash/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



heuristic: p















rule (modulo E) Init[color=#ffffff, process='P()', issapicrule,
                     role='Process']:
   [ ] --[ Init( ) ]-> [ State_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) P_0_[color=#ffffff, process='P()', issapicrule,
                     role='Process']:
   [ State_( ) ] --> [ State_1( ), State_2( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newa_0_1[color=#6c8040, process='new a.1;', issapicrule,
                         role='P']:
   [ State_1( ), Fr( a.1 ) ] --> [ State_11( a.1 ) ]

  /*
  rule (modulo AC) newa_0_1[color=#6c8040, process='new a.1;', issapicrule,
                            role='P']:
     [ State_1( ), Fr( a ) ] --> [ State_11( a ) ]
  */

rule (modulo E) outga_0_11[color=#6c8040, process='out('g'^a.1);',
                           issapicrule, role='P']:
   [ State_11( a.1 ) ] --> [ State_111( a.1 ), Out( 'g'^a.1 ) ]

  /*
  rule (modulo AC) outga_0_11[color=#6c8040, process='out('g'^a.1);',
                              issapicrule, role='P']:
     [ State_11( a ) ] --> [ State_111( a ), Out( z ) ]
    variants (modulo AC)
    1. a     = a.4
       z     = 'g'^a.4
    
    2. a     = one
       z     = 'g'
  */

rule (modulo E) p_0_111[color=#6c8040, process='0', issapicrule,
                        role='P']:
   [ State_111( a.1 ) ] --> [ ]

  /*
  rule (modulo AC) p_0_111[color=#6c8040, process='0', issapicrule,
                           role='P']:
     [ State_111( a ) ] --> [ ]
  */

rule (modulo E) p_0_2[color=#ffffff, process='0', issapicrule,
                      role='Process']:
   [ State_2( ) ] --> [ ]

  /* has exactly the trivial AC variant */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.11.0
Maude version 3.4
Git revision: b954f6565e030d682d7951db74b7033939ef638b (with uncommited changes), branch: develop
Compiled at: 2025-06-06 08:30:52.256236371 UTC
*/

end
/* Output

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/basic/let-blocks2.spthy

  output:          examples/sapic/fast/basic/let-blocks2.spthy.tmp
  processing time: 0.10s
  

==============================================================================
*/
