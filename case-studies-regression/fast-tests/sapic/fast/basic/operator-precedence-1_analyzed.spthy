theory OperatorPrecedencePar begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



heuristic: p

section{* A few test cases for operator precedence *}



lemma semicolon_binds_stronger_than_parallel:
  exists-trace
  "((∃ #c. C( ) @ #c) ∧ (¬(∃ #a. A( ) @ #a))) ∧ (¬(∃ #b. B( ) @ #b))"
/*
guarded formula characterizing all satisfying traces:
"(∃ #c. (C( ) @ #c)) ∧ (∀ #a. (A( ) @ #a) ⇒ ⊥) ∧ (∀ #b. (B( ) @ #b) ⇒ ⊥)"
*/
simplify
solve( State_2( ) ▶₀ #c )
  case p_0_
  SOLVED // trace found
qed







rule (modulo E) Init[color=#ffffff, process='|', issapicrule,
                     role='Process']:
   [ ] --[ Init( ) ]-> [ State_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_[color=#ffffff, process='|', issapicrule,
                     role='Process']:
   [ State_( ) ] --> [ State_1( ), State_2( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventA_0_1[color=#ffffff, process='event A( );',
                           issapicrule, role='Process']:
   [ State_1( ) ] --[ A( ) ]-> [ State_11( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventB_0_11[color=#ffffff, process='event B( );',
                            issapicrule, role='Process']:
   [ State_11( ) ] --[ B( ) ]-> [ State_111( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_111[color=#ffffff, process='0', issapicrule,
                        role='Process']:
   [ State_111( ) ] --> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventC_0_2[color=#ffffff, process='event C( );',
                           issapicrule, role='Process']:
   [ State_2( ) ] --[ C( ) ]-> [ State_21( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_0_21[color=#ffffff, process='0', issapicrule,
                       role='Process']:
   [ State_21( ) ] --> [ ]

  /* has exactly the trivial AC variant */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.11.0
Maude version 3.4
Git revision: d224b4b965f014cbf18a3a01c5afbd5b20576914 (with uncommited changes), branch: develop
Compiled at: 2025-09-08 09:04:28.158015016 UTC
*/

end
/* Output

==============================================================================
summary of summaries:

analyzed: examples/sapic/fast/basic/operator-precedence-1.spthy

  output:          examples/sapic/fast/basic/operator-precedence-1.spthy.tmp
  processing time: 0.07s
  
  semicolon_binds_stronger_than_parallel (exists-trace): verified (3 steps)

==============================================================================
*/
